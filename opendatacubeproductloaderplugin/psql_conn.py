# -*- coding: utf-8 -*-
"""
/***************************************************************************
 dataDisplayDialog
                                 A QGIS plugin
 This plugin displays data from datacube
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-05-06
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Ashutosh Vaish
        email                : ashutoshvaish6397@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License v3.0 as published*
 *   by the Free Software Foundation;                                      *
 *                                                                         *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtGui import QIcon

import psycopg2

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'psql_conn.ui'))


class psqlConnection(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(psqlConnection, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.setFixedSize(self.frameSize())
        self.setWindowIcon(QIcon(":/plugins/OpenDataCube_Product_Loader/assets/icon.png"))

    def createDatabaseConnection(self,dataDisplayDialog):
        host = self.hostText.text()
        port = self.portText.text()
        username = self.userText.text()
        password = self.passText.text()
        database = self.dbText.text() 
        sslmode = self.sslComboBox.currentText()  
        try:
            if host is '' or port is '' or username is '' or database is '':
                QMessageBox.information(None, "Warning:", str('Some required fields are missing. Please complete the form'))  
            else:
                dataDisplayDialog.dbConnectionString=psycopg2.connect(database=database, user=username, password=password, host=host, port=port, sslmode=sslmode)
                dataDisplayDialog.appendLogs(dataDisplayDialog.dbConnectionString.dsn)
                dataDisplayDialog.conDbServer.setText('Disconnect Database Server')
                dataDisplayDialog.listProducts()
                dataDisplayDialog.showIngestedDataProductList()
                self.close()
        except psycopg2.Error as e:
            dataDisplayDialog.dbConnectionString=None
            dataDisplayDialog.appendLogs(e)  

    def checkDatabaseConnection(self,dataDisplayDialog):
        if dataDisplayDialog.conDbServer.isChecked() and dataDisplayDialog.dbConnectionString != None:
            dataDisplayDialog.conDbServer.setText('Connect Database Server')
            dataDisplayDialog.dbConnectionString.close()
            dataDisplayDialog.treeProductInfo.clear()
            dataDisplayDialog.treeProductInfo_2.clear()
            dataDisplayDialog.appendLogs('Database Connection Closed')
        else:
            self.show()

